name: Build and Deploy to Lightsail

on:
  push:
    branches:
      - fixing-pipeline
  pull_request:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:prod

  deploy-infra:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.5.0"
      - name: Terraform Init
        run: terraform init
        working-directory: infrastructure
      - name: Terraform Apply
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform apply -auto-approve
        working-directory: infrastructure
      - name: Capture Terraform Outputs
        id: tf-outputs
        run: |
          echo "instance_ip=$(terraform output -raw instance_ip)" >> $GITHUB_OUTPUT
          echo "instance_private_key<> $GITHUB_OUTPUT
          terraform output -raw instance_private_key >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
    outputs:
      instance_ip: ${{ steps.tf-outputs.outputs.instance_ip }}
      instance_private_key: ${{ steps.tf-outputs.outputs.instance_private_key }}

  deploy-app:
    needs: deploy-infra
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Lightsail
        env:
          LIGHTSAIL_HOST: ${{ needs.deploy-infra.outputs.instance_ip }}
          LIGHTSAIL_SSH_KEY: ${{ needs.deploy-infra.outputs.instance_private_key }}
        run: |
          echo "$LIGHTSAIL_SSH_KEY" > key.pem
          chmod 600 key.pem
          ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@$LIGHTSAIL_HOST << 'EOF'
            cd /opt/next-app
            docker-compose pull
            docker-compose up -d
          EOF
